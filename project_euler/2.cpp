
#include <iostream>
#include <vector>
using namespace std;


/*
	Problem: https://projecteuler.net/problem=2

	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

int main(){

	unsigned int a, b, n, i, sum;
	unsigned int maxNum = 4000000;

	vector<int> rawFib;		//stores raw Fibonacci
	vector<int> evenFib;		//stores even Fibonacci

	a = 1;
	b = 1;
	n = 1;
	sum = 0;

	//generate raw fib seq
	for(i = 0; n < maxNum; i++){
		a = b;
		b = n;
		rawFib.push_back(n); //<-- this part of the code can be golfed
		n = a + b;
	}

	//collect even fib numbers from raw
	for(i = 0; i < rawFib.size(); i++){
		if(!(rawFib.at(i) % 2)){
			evenFib.push_back(rawFib.at(i));
		}
	}

	//add up all even fib numbers
	for(i = 0; i < evenFib.size(); i++){
		sum = sum + evenFib.at(i);
	}

	//Answer
	cout << endl;
	cout << "Sum of Fibonacci sequence whose values do not exceed four million: " << sum;


	cout << endl;
	return 0;
}
